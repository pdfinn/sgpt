name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          cache: true

      - name: Run tests
        run: go test -v ./...

      - name: Build
        run: |
          GOOS=darwin GOARCH=amd64 go build -o dist/sgpt-darwin-amd64 ./cmd/sgpt
          GOOS=darwin GOARCH=arm64 go build -o dist/sgpt-darwin-arm64 ./cmd/sgpt
          GOOS=linux GOARCH=amd64 go build -o dist/sgpt-linux-amd64 ./cmd/sgpt
          GOOS=linux GOARCH=arm64 go build -o dist/sgpt-linux-arm64 ./cmd/sgpt
          GOOS=windows GOARCH=amd64 go build -o dist/sgpt-windows-amd64.exe ./cmd/sgpt

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/sgpt-darwin-amd64
            dist/sgpt-darwin-arm64
            dist/sgpt-linux-amd64
            dist/sgpt-linux-arm64
            dist/sgpt-windows-amd64.exe
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/sgpt:latest
            ghcr.io/${{ github.repository_owner }}/sgpt:${{ github.ref_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create Homebrew Formula
        run: |
          VERSION=${{ github.ref_name }}
          SHA256_DARWIN_AMD64=$(shasum -a 256 dist/sgpt-darwin-amd64 | cut -d' ' -f1)
          SHA256_DARWIN_ARM64=$(shasum -a 256 dist/sgpt-darwin-arm64 | cut -d' ' -f1)
          SHA256_LINUX_AMD64=$(shasum -a 256 dist/sgpt-linux-amd64 | cut -d' ' -f1)
          SHA256_LINUX_ARM64=$(shasum -a 256 dist/sgpt-linux-arm64 | cut -d' ' -f1)
          
          cat > Formula/sgpt.rb << EOF
          class Sgpt < Formula
            desc "StreamGPT (SGPT) is a CLI tool to interact with OpenAI, Anthropic, and Google AI models"
            homepage "https://github.com/${{ github.repository }}"
            version "$VERSION"
            license "MIT"

            on_macos do
              if Hardware::CPU.intel?
                url "https://github.com/${{ github.repository }}/releases/download/$VERSION/sgpt-darwin-amd64"
                sha256 "$SHA256_DARWIN_AMD64"
              end
              if Hardware::CPU.arm?
                url "https://github.com/${{ github.repository }}/releases/download/$VERSION/sgpt-darwin-arm64"
                sha256 "$SHA256_DARWIN_ARM64"
              end
            end

            on_linux do
              if Hardware::CPU.intel?
                url "https://github.com/${{ github.repository }}/releases/download/$VERSION/sgpt-linux-amd64"
                sha256 "$SHA256_LINUX_AMD64"
              end
              if Hardware::CPU.arm?
                url "https://github.com/${{ github.repository }}/releases/download/$VERSION/sgpt-linux-arm64"
                sha256 "$SHA256_LINUX_ARM64"
              end
            end

            def install
              bin.install Dir["sgpt-*"].first => "sgpt"
            end

            test do
              system "#{bin}/sgpt", "--version"
            end
          end
          EOF

      - name: Push Homebrew Formula
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git clone https://${{ secrets.GH_TOKEN }}@github.com/${{ github.repository_owner }}/homebrew-sgpt.git
          cd homebrew-sgpt
          cp ../Formula/sgpt.rb Formula/
          git add Formula/sgpt.rb
          git commit -m "Update sgpt to ${{ github.ref_name }}"
          git push 